# -*- coding=utf-8 -*-

from src.telegram_helper import reply_func
from prefs.config import SEARCHES, SNAPSHOTS, ADMINS, EXTENSIONS, SETTINGS


def content_len(content):
    length = 0
    for item in content:
        item_len = len(str(item))
        if item_len > length:
            length = item_len
    return length


def add_space(element, length):
    e_len = length - len(str(element))
    string = ''
    while e_len > 0:
        string += ' '
        e_len -= 1
    return string


def help_chapter(header, content, suffix='', new_line=False, row_num=-1):
    result = ''
    if new_line:
        length = 0
        nl = '\n'
    else:
        length = content_len(content)
        nl = ''
    for element in content:

        result += '  - `' + str(element) + add_space(element, length) + '`' + suffix + nl + str(content[element][row_num]) + '\n'
    return str('\n' + str(header) + '\n' + result)


def command_help(message):
    reply = 'ü§ñ –ë–æ—Ç –ï–ì–ò–° –û–ö–ù–î ü§ñ\n\n'

    if not ('/help' in str(message.text) or '/help' in str(message.text)):
        reply += '–í–≤–µ–¥–µ–Ω–∞ –Ω–µ –≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.\n'

    if message.chat.id > 0:
        reply += '–í–≤–µ–¥–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ –∫–æ–º–∞–Ω–¥ —Å –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º.\n'
    else:
        reply += '–ë–æ—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É:\n@moc\\_ict\\_bot\n'

    reply += help_chapter(
               '*–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–¥–∞–Ω–∏–∏:*', SEARCHES, suffix='  ‚Äî  ')
    reply += '\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –æ–¥–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: ' + str(SETTINGS['max_args'][0]) + '\n'
    reply += '–ü—Ä–∏–º–µ—Ä c –¥–≤—É–º—è –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏:\n`' + '/knd 12345, 23456' + '`\n'

    reply_func(message, reply)